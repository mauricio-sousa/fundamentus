# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on: [push, pull_request]

jobs:
  build:
    name: test with python ${{ matrix.python-version }}

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['>=3.12', '>=3.13']

    steps:
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Ferramentas de desenvolvimento e test
        python -m pip install flake8 pytest pytest-cov pytest-asyncio
        # Instala runtime do projeto
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        py.test --cov=api -vv

    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v5
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true

    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        repo-token: ${{ secrets.COVERALLS_REPO_TOKEN }}
        parallel: true
        flag-name: Unit Test